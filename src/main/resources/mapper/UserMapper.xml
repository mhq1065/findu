<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bigdatahealth.findu.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="org.bigdatahealth.findu.pojo.User" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_nick" property="userNick" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="CHAR" />
    <result column="user_age" property="userAge" jdbcType="INTEGER" />
    <result column="user_city" property="userCity" jdbcType="VARCHAR" />
    <result column="user_portrait" property="userPortrait" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="sessionkey" property="sessionkey" jdbcType="VARCHAR" />
    <result column="authenticate" property="authenticate" jdbcType="INTEGER" />
    <result column="user_signature" property="userSignature" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="member" property="member" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_nick, user_sex, user_age, user_city, user_portrait, openid, sessionkey, 
    authenticate, user_signature, user_phone, user_email, member
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.bigdatahealth.findu.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.bigdatahealth.findu.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.bigdatahealth.findu.pojo.User" >
    insert into user (user_id, user_nick, user_sex, 
      user_age, user_city, user_portrait, 
      openid, sessionkey, authenticate, 
      user_signature, user_phone, user_email, 
      member)
    values (#{userId,jdbcType=BIGINT}, #{userNick,jdbcType=VARCHAR}, #{userSex,jdbcType=CHAR}, 
      #{userAge,jdbcType=INTEGER}, #{userCity,jdbcType=VARCHAR}, #{userPortrait,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{sessionkey,jdbcType=VARCHAR}, #{authenticate,jdbcType=INTEGER}, 
      #{userSignature,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{member,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.bigdatahealth.findu.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userNick != null" >
        user_nick,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userAge != null" >
        user_age,
      </if>
      <if test="userCity != null" >
        user_city,
      </if>
      <if test="userPortrait != null" >
        user_portrait,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="sessionkey != null" >
        sessionkey,
      </if>
      <if test="authenticate != null" >
        authenticate,
      </if>
      <if test="userSignature != null" >
        user_signature,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="member != null" >
        member,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNick != null" >
        #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=CHAR},
      </if>
      <if test="userAge != null" >
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userCity != null" >
        #{userCity,jdbcType=VARCHAR},
      </if>
      <if test="userPortrait != null" >
        #{userPortrait,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionkey != null" >
        #{sessionkey,jdbcType=VARCHAR},
      </if>
      <if test="authenticate != null" >
        #{authenticate,jdbcType=INTEGER},
      </if>
      <if test="userSignature != null" >
        #{userSignature,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="member != null" >
        #{member,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.bigdatahealth.findu.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userNick != null" >
        user_nick = #{record.userNick,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null" >
        user_sex = #{record.userSex,jdbcType=CHAR},
      </if>
      <if test="record.userAge != null" >
        user_age = #{record.userAge,jdbcType=INTEGER},
      </if>
      <if test="record.userCity != null" >
        user_city = #{record.userCity,jdbcType=VARCHAR},
      </if>
      <if test="record.userPortrait != null" >
        user_portrait = #{record.userPortrait,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.sessionkey != null" >
        sessionkey = #{record.sessionkey,jdbcType=VARCHAR},
      </if>
      <if test="record.authenticate != null" >
        authenticate = #{record.authenticate,jdbcType=INTEGER},
      </if>
      <if test="record.userSignature != null" >
        user_signature = #{record.userSignature,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.member != null" >
        member = #{record.member,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_nick = #{record.userNick,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=CHAR},
      user_age = #{record.userAge,jdbcType=INTEGER},
      user_city = #{record.userCity,jdbcType=VARCHAR},
      user_portrait = #{record.userPortrait,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      sessionkey = #{record.sessionkey,jdbcType=VARCHAR},
      authenticate = #{record.authenticate,jdbcType=INTEGER},
      user_signature = #{record.userSignature,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      member = #{record.member,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.bigdatahealth.findu.pojo.User" >
    update user
    <set >
      <if test="userNick != null" >
        user_nick = #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=CHAR},
      </if>
      <if test="userAge != null" >
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userCity != null" >
        user_city = #{userCity,jdbcType=VARCHAR},
      </if>
      <if test="userPortrait != null" >
        user_portrait = #{userPortrait,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionkey != null" >
        sessionkey = #{sessionkey,jdbcType=VARCHAR},
      </if>
      <if test="authenticate != null" >
        authenticate = #{authenticate,jdbcType=INTEGER},
      </if>
      <if test="userSignature != null" >
        user_signature = #{userSignature,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="member != null" >
        member = #{member,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bigdatahealth.findu.pojo.User" >
    update user
    set user_nick = #{userNick,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=CHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_city = #{userCity,jdbcType=VARCHAR},
      user_portrait = #{userPortrait,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      sessionkey = #{sessionkey,jdbcType=VARCHAR},
      authenticate = #{authenticate,jdbcType=INTEGER},
      user_signature = #{userSignature,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      member = #{member,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>